const Article = require('../models/ArticlSchema');
const nodemailer = require("nodemailer");

const AddArticle = async (req, res) => {
    try {
        const { auteur, titre, texte, lien } = req.body;
        let photoPath = "";

        if (req.files) {
            if (req.files["imagee"] && (req.files["imagee"][0].mimetype === "image/png" || req.files["imagee"][0].mimetype === "image/jpeg")) {
              photoPath = req.files["imagee"][0].path;
            }
    }
        const article = await Article.create({
            auteur, titre, texte, photo: photoPath, lien
        });
       // Configuration of Nodemailer
       const transporter = nodemailer.createTransport({
        host: 'ssl0.ovh.net',
        port: 587,
        auth: {
          user: 'sendcon@moncoach.tn', // SMTP username
          pass: 'yassine123456' // SMTP password
        }
      });

      // Email options
      const mailOptions = {
        from: 'contact@moncoach.tn', // Sender email address
        to: "contact@moncoach.tn",
        subject: 'Nouveau article',
        html: `<p>Un nouveau article a été ajouté !</p><a href="http://localhost:3000/admin/artcle/invisible">Voir les détails</a>`
      };

      // Send email
      transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
          return res.status(500).json({ success: false, message: "Erreur lors de l'envoi de l'email", error: error.toString() });
        }
      });

        res.status(200).json({ article });

    } catch (error) {
        res.status(500).json({ error: error.message });
    }
}

const GetArticlesInvisible = async (req, res) => {
    try {
        const articles = await Article.find({ Visible: false });
        res.status(200).json({ msg: 'Articles retrieved successfully', articlesInvi: articles });
    } catch (error) {
        console.error("Error while retrieving articles:", error);
        res.status(500).json({ msg: 'Internal server error' });
    }
}

const GetArticlesVisible = async (req, res) => {
    try {
        const articles = await Article.find({ Visible: true });
        console.log("Retrieved articles:", articles);
        res.status(200).json({ msg: 'Articles retrieved successfully', articlesVisib: articles });
    } catch (error) {
        console.error("Error while retrieving articles:", error);
        res.status(500).json({ msg: 'Internal server error' });
    }
}
const UpdateArticle = async (req, res) => {
    try {
        const ArticleId = req.params.id;
        console.log(req.params.id)

        const updatedArticleData = req.body;
        let photoPath = '';
        if (req.file) {
            photoPath = req.file.path;
            updatedArticleData.photo = photoPath;
        }
        await Article.findByIdAndUpdate(ArticleId, updatedArticleData);
        res.status(200).json({ message: 'Article updated successfully.' });
   } catch (error) {
       console.error(error);
       res.status(500).json({ message: 'Internal Server Error' });
   }
}

const DeleteArticle =async(req,res)=>{
    try {
        const ArtickeId=req.params.id;
        await Article.findByIdAndDelete(ArtickeId);
        res.status(200).json({ message: 'Article Delete successfully.' });
   } catch (error) {
       res.status(500).json({ message: 'Internal Server Error' });
   }
}
module.exports = { AddArticle, GetArticlesInvisible, GetArticlesVisible, UpdateArticle, DeleteArticle };
