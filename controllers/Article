const Article = require('../models/ArticlSchema');

const AddArticle = async (req, res) => {
    try {
        const { Auteur, Titre, Texte, Lien } = req.body;
        let photoPath = '';
        if (req.file) {
            photoPath = req.file.path;
        }

        const article = await Article.create({
            Auteur, Titre, Texte, Photo: photoPath, Lien
        });

        res.status(200).json({ article });

    } catch (error) {
        res.status(500).json({ error: error.message });
    }
}

const GetArticlesInvisible = async (req, res) => {
    try {
        const articles = await Article.find({ Visible: false });
        console.log("Retrieved articles:", articles);
        res.status(200).json({ msg: 'Articles retrieved successfully', articles: articles });
    } catch (error) {
        console.error("Error while retrieving articles:", error);
        res.status(500).json({ msg: 'Internal server error' });
    }
}

const GetArticlesVisible = async (req, res) => {
    try {
        const articles = await Article.find({ Visible: true });
        console.log("Retrieved articles:", articles);
        res.status(200).json({ msg: 'Articles retrieved successfully', articles: articles });
    } catch (error) {
        console.error("Error while retrieving articles:", error);
        res.status(500).json({ msg: 'Internal server error' });
    }
}
const UpdateArticle = async (req, res) => {
    try {
        const ArticleId = req.params.id;
        const updatedArticleData = req.body; // Les données mises à jour de l'article
        let photoPath = '';
        if (req.file) {
            photoPath = req.file.path;
            // Ajoute le chemin de la nouvelle photo à l'objet de mise à jour
            updatedArticleData.Photo = photoPath;
        }
        console.log(updatedArticleData)
        await Article.findByIdAndUpdate(ArticleId, updatedArticleData);
        res.status(200).json({ message: 'Article updated successfully.' });
   } catch (error) {
       console.error(error);
       res.status(500).json({ message: 'Internal Server Error' });
   }
}

const DeleteArticle =async(req,res)=>{
    try {
        const ArtickeId=req.params.id;
        await Article.findByIdAndDelete(ArtickeId);
        res.status(200).json({ message: 'Article Delete successfully.' });
   } catch (error) {
       res.status(500).json({ message: 'Internal Server Error' });
   }
}
module.exports = { AddArticle, GetArticlesInvisible, GetArticlesVisible, UpdateArticle, DeleteArticle };
